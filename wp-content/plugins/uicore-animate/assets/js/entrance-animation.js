function _toConsumableArray(r){return _arrayWithoutHoles(r)||_iterableToArray(r)||_unsupportedIterableToArray(r)||_nonIterableSpread()}function _nonIterableSpread(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}function _unsupportedIterableToArray(r,t){var a;if(r)return"string"==typeof r?_arrayLikeToArray(r,t):"Map"===(a="Object"===(a={}.toString.call(r).slice(8,-1))&&r.constructor?r.constructor.name:a)||"Set"===a?Array.from(r):"Arguments"===a||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(a)?_arrayLikeToArray(r,t):void 0}function _iterableToArray(r){if("undefined"!=typeof Symbol&&null!=r[Symbol.iterator]||null!=r["@@iterator"])return Array.from(r)}function _arrayWithoutHoles(r){if(Array.isArray(r))return _arrayLikeToArray(r)}function _arrayLikeToArray(r,t){(null==t||t>r.length)&&(t=r.length);for(var a=0,e=Array(t);a<t;a++)e[a]=r[a];return e}document.addEventListener("DOMContentLoaded",function(){var r=document.querySelectorAll("[data-ui-animation]"),t=new IntersectionObserver(function(r,n){r.forEach(function(r){var t,a,e;r.isIntersecting&&(a=r.target.getAttribute("data-ui-animation"),e=r.target.getAttribute("data-ui-duration"),(t=r.target.classList).add.apply(t,_toConsumableArray(a.split(" "))),r.target.classList.remove("uicore-animate-hide"),"fast"===e?r.target.classList.add("animated","animated-fast"):"slow"===e?r.target.classList.add("animated","animated-slow"):r.target.classList.add("animated"),n.unobserve(r.target))})},{rootMargin:"50px",threshold:0});r.forEach(function(r){t.observe(r)})});